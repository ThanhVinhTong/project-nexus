-- Drop existing tables if needed (commented out for safety)
-- DROP TABLE IF EXISTS "UserTasks" CASCADE;
-- DROP TABLE IF EXISTS "ProjectUsers" CASCADE;
-- DROP TABLE IF EXISTS "Users" CASCADE;
-- DROP TABLE IF EXISTS "Tasks" CASCADE;
-- DROP TABLE IF EXISTS "References" CASCADE;
-- DROP TABLE IF EXISTS "Notes" CASCADE;
-- DROP TABLE IF EXISTS "Activities" CASCADE;
-- DROP TABLE IF EXISTS "Projects" CASCADE;

-- Create Projects table
CREATE TABLE IF NOT EXISTS "Projects" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Title" text NOT NULL,
  "Description" text NULL,
  "Deadline" timestamptz NULL,
  "Status" text NOT NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc')
);

-- Create Activities table
CREATE TABLE IF NOT EXISTS "Activities" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectId" integer NOT NULL,
  "Message" text NOT NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "FK_Activities_Projects_ProjectId"
    FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE
);

-- Create Notes table
CREATE TABLE IF NOT EXISTS "Notes" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectId" integer NOT NULL,
  "Content" text NOT NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "FK_Notes_Projects_ProjectId"
    FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE
);

-- Create References table
CREATE TABLE IF NOT EXISTS "References" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectId" integer NOT NULL,
  "ReferenceName" text NOT NULL,
  "Url" text NULL,
  "Description" text NULL,
  "Authors" text NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "FK_References_Projects_ProjectId"
    FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE
);

-- Create Tasks table
CREATE TABLE IF NOT EXISTS "Tasks" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectId" integer NOT NULL,
  "Title" text NOT NULL,
  "Type" text NULL,
  "Priority" text NULL,
  "DueDate" timestamptz NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "FK_Tasks_Projects_ProjectId"
    FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE
);

-- Create Users table
CREATE TABLE IF NOT EXISTS "Users" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "LegalName" text NOT NULL,
  "UserName" text NOT NULL,
  "Email" text NOT NULL,
  "HashedPassword" text NOT NULL,
  "Role" text NOT NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc')
);

-- Create ProjectUsers table (junction)
CREATE TABLE IF NOT EXISTS "ProjectUsers" (
  "Id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ProjectId" integer NOT NULL,
  "UserId" integer NOT NULL,
  "UserPermission" text NOT NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "FK_ProjectUsers_Projects_ProjectId"
    FOREIGN KEY ("ProjectId") REFERENCES "Projects" ("Id") ON DELETE CASCADE,
  CONSTRAINT "FK_ProjectUsers_Users_UserId"
    FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

-- Create UserTasks table (junction)
CREATE TABLE IF NOT EXISTS "UserTasks" (
  "TaskId" integer NOT NULL,
  "UserId" integer NOT NULL,
  "Comment" text NULL,
  "CreatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  "UpdatedAt" timestamptz NULL DEFAULT (now() AT TIME ZONE 'utc'),
  CONSTRAINT "PK_UserTasks" PRIMARY KEY ("TaskId", "UserId"),
  CONSTRAINT "FK_UserTasks_Tasks_TaskId"
    FOREIGN KEY ("TaskId") REFERENCES "Tasks" ("Id") ON DELETE CASCADE,
  CONSTRAINT "FK_UserTasks_Users_UserId"
    FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

-- Create Indexes (for performance, matching EF Core defaults)
CREATE INDEX IF NOT EXISTS "IX_Activities_ProjectId" ON "Activities" ("ProjectId");
CREATE INDEX IF NOT EXISTS "IX_Notes_ProjectId" ON "Notes" ("ProjectId");
CREATE INDEX IF NOT EXISTS "IX_References_ProjectId" ON "References" ("ProjectId");
CREATE INDEX IF NOT EXISTS "IX_Tasks_ProjectId" ON "Tasks" ("ProjectId");
CREATE INDEX IF NOT EXISTS "IX_ProjectUsers_ProjectId" ON "ProjectUsers" ("ProjectId");
CREATE INDEX IF NOT EXISTS "IX_ProjectUsers_UserId" ON "ProjectUsers" ("UserId");
CREATE INDEX IF NOT EXISTS "IX_UserTasks_TaskId" ON "UserTasks" ("TaskId");
CREATE INDEX IF NOT EXISTS "IX_UserTasks_UserId" ON "UserTasks" ("UserId");